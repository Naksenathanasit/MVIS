version: '3.9'

services:
  # dgraph_zero:
  #   image: dgraph/dgraph:latest
  #   container_name: dgraph_zero
  #   ports:
  #     # - '5080:5080'
  #     - '6080:6080'
  #   environment:
  #     DGRAPH_ZERO_MY: http://dgraph_zero:5080
  #   volumes:
  #     - dgraph_zero:/dgraph:rw
  #   restart: on-failure
  #   command: dgraph zero
  #   healthcheck:
  #     test: curl http://dgraph_zero:6080/state || exit 1
  #     interval: 10s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 15s

  # dgraph_alpha:
  #   image: dgraph/dgraph:latest
  #   container_name: dgraph_alpha
  #   depends_on:
  #     dgraph_zero:
  #       condition: service_healthy
  #   ports:
  #     # - '7080:7080'
  #     - '8080:8080'
  #     # - '9080:9080'
  #   environment:
  #     DGRAPH_ALPHA_GRAPHQL: "lambda-url=http://dgraph_lambda:8686/graphql-worker"
  #     DGRAPH_ALPHA_ZERO: http://dgraph_zero:5080
  #     DGRAPH_ALPHA_MY: http://dgraph_alpha:7080
  #   volumes:
  #     - dgraph_alpha:/dgraph:rw
  #   restart: on-failure
  #   command: dgraph alpha
  #   healthcheck:
  #     test: curl http://dgraph_alpha:8080/health || exit 1
  #     interval: 10s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 15s

  dgraph:
    image: dgraph/standalone:v21.03.2
    container_name: dgraph
    ports:
      # - '5080:5080'
      - '6080:6080'
      # - '7080:7080'
      - '8080:8080'
      # - '9080:9080'
      - '8000:8000'
    environment:
      DGRAPH_ALPHA_GRAPHQL: "lambda-url=http://dgraph_lambda:8686/graphql-worker" # dgraph lambda endpoint
    volumes:
      - dgraph:/dgraph:rw
    # restart: on-failure
    healthcheck:
      test: curl http://dgraph:8080/health || exit 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 15s

  build_schema:
    container_name: build_schema
    build:
      context: ./
      dockerfile: ./Dockerfile.schema
      args:
        DEPLOYMENT_URL: http://dgraph:8080/admin/schema # dgraph alpha admin endpoint
    depends_on:
      dgraph:
        condition: service_healthy
    volumes:
      - ./backend/schema.graphql:/app/schema.graphql:ro
      - ./backend/setup.sh:/app/setup.sh:ro

  build_lambda:
    container_name: build_lambda
    build:
      context: ./
      dockerfile: ./Dockerfile.lambda
      args:
        NODE_ENV: development
    volumes:
      - ./package.json:/app/package.json:ro
      - ./yarn.lock:/app/yarn.lock:ro
      - ./backend/package.json:/app/backend/package.json:ro
      - ./backend/tsconfig.json:/app/backend/tsconfig.json:ro
      - ./backend/webpack.config.js:/app/backend/webpack.config.js:ro
      - ./backend/src:/app/backend/src:ro
      - lambda_script:/app/backend/dist:rw
    command: yarn workspace mvis-backend run watch

  dgraph_lambda:
    image: dgraph/dgraph-lambda:latest
    container_name: dgraph_lambda
    depends_on:
      dgraph:
        condition: service_healthy
      build_lambda:
        condition: service_started
    ports:
      - '8686:8686'
    environment:
      DGRAPH_URL: http://dgraph:8080 # dgraph alpha endpoint
    volumes:
      - lambda_script:/app/script:ro
    restart: on-failure

  frontend:
    container_name: mvis
    build:
      context: ./
      dockerfile: ./Dockerfile.frontend
      args:
        NODE_ENV: development
        BACKEND_URL: http://localhost:8080/graphql # dgraph alpha client-side URL endpoint
    environment:
      EXPO_DEVTOOLS_LISTEN_ADDRESS: 0.0.0.0
      CHOKIDAR_USEPOLLING: 'true'
    ports:
      - '19000:19000'
      - '19001:19001'
      - '19002:19002'
      - '19006:19006'
    volumes:
      - ./package.json:/app/package.json:ro
      - ./yarn.lock:/app/yarn.lock:ro
      - ./frontend/package.json:/app/frontend/package.json:ro
      - ./frontend/app.json:/app/frontend/app.json:ro
      - ./frontend/babel.config.js:/app/frontend/babel.config.js:ro
      - ./frontend/tsconfig.json:/app/frontend/tsconfig.json:ro
      - ./frontend/index.ts:/app/frontend/index.ts:ro
      - ./frontend/.expo-shared:/app/frontend/.expo-shared:rw
      - ./frontend/assets:/app/frontend/assets:ro
      - ./frontend/src:/app/frontend/src:ro
    restart: on-failure
    command: yarn workspace mvis-frontend run dev:web

volumes:
  # dgraph_zero: {}
  # dgraph_alpha: {}
  dgraph: {}
  lambda_script: {}
