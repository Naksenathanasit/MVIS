# Simple workflow for deploying static content to GitHub Pages
name: Deploy Expo with GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - '*'
    paths:
      - .github/workflows/pages.yml
      - frontend/**

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Deploy Backend
  deploy-backend:
    environment:
      CEREBRO_JWT: ${{ secrets.CEREBRO_JWT }}
      DEPLOYMENT_NAME: ${{ secrets.MVIS_BACKEND_NAME }}
    runs-on: ubuntu-latest
    outputs:
      BACKEND_URL: ${{ steps.deploy.outputs.BACKEND_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Deploy to Dgraph Cloud
        id: deploy
        run: yarn workspace mvis-backend run deploy

  # Build job
  build-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Build docker image
        run: |
          docker build \
            --build-arg NODE_ENV=production \
            --build-arg BACKEND_URL=${{ needs.deploy-backend.outputs.BACKEND_URL }} \
            -t mvis-frontend -f ./Dockerfile.frontend .
      - name: Build Github Pages
        run: |
          docker run \
            --name mvis \
            -v `pwd`/web-build:/app/frontend/web-build \
            mvis-frontend \
            yarn workspace mvis-frontend run export:web
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "./web-build"

  # Deployment job
  deploy-frontend:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
