# Simple workflow for deploying static content to GitHub Pages
name: Deploy Schema and Lambda to DGraph Cloud

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - '*'
    paths:
      - .github/workflows/deploy-backend.yml
      - backend/**

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "deploy-dgraph"
  cancel-in-progress: true

jobs:
  # Deploy
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .dgraph/cache
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-
      - name: Install dependencies
        run: yarn install
      - name: Deploy to Dgraph Cloud
        env:
          CEREBRO_JWT: ${{ secrets.CEREBRO_JWT }}
          DEPLOYMENT_NAME: ${{ secrets.BACKEND_NAME }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_PUBLIC_KEY: ${{ secrets.AUTH0_PUBLIC_KEY }}
        run: yarn run deploy
