# Simple workflow for deploying static content to GitHub Pages
name: Deploy Expo with GitHub Pages

on:
  # Runs on pushes targeting the default branch
  workflow_run:
    workflows: ["Build and Test Expo"]
    types:
      - completed
    branches:
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "deploy-github-pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    environment:
      name: build-frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .frontend/cache
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-
      - name: Install dependencies
        run: yarn install
      - name: Generate graphql in typescript
        env:
          NODE_ENV: production
          BACKEND_URL: ${{ secrets.BACKEND_URL }}
        run: yarn codegen
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Build GitHub Pages
        env:
          NODE_ENV: production
          BACKEND_URL: ${{ secrets.BACKEND_URL }}
          BACKEND_API_KEY: ${{ secrets.BACKEND_API_KEY }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
        run: npx expo export:web
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "./frontend/web-build"

  # Deployment job
  deploy-frontend:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
